<header class="site-header">
<nav>
  <ol class="breadcrumb">
  	<li class="breadcrumb-item"><img style="max-height:1.4em;" src="logo.png" alt="Logo" /></li>
  	<li class="breadcrumb-item">Digitale Probe</li>
    <li class="breadcrumb-item active">Hallo, {{session.firstname}}!</li>
    <li class="ml-auto"><a href="/deauth/">Logout</a></li>
  </ol>
</nav>
</header>

<style type="text/css">
	.playlist .controls header {
		background-color:#0062cc;
		text-align: left;
		padding-left: 0.4em;
    padding-bottom: 0.5em;
    line-height: 1.2em;
	}

  .playlist .controls label {
    margin-top:0.5em;
  }

  .playlist .controls .volume-slider { /*wat */
    font-size:7.5px;
    position:relative;
    top:-2px;
  }

  input[type=range]::-webkit-slider-thumb, input[type=range]::-moz-range-thumb {
    background: #0062cc !important;
  }

  .playlist {
    margin:0.5em 0 0 0;
  }

  #playlist {
    padding-right:10px;
    padding-left:0;
  }

  #lyrics-container{
    padding:0;
  }

  #lyrics {
    overflow:auto;
  }

	.btn-group-xs > .btn, .btn-xs {
	  padding: .25rem .4rem;
	  font-size: .875rem;
	  line-height: .5;
	  border-radius: .2rem;
	}

  .row {
    margin: 0;
  }

  {{#unless enableUpload}}
  .upload-btn {
    display:none;
  }
  {{/unless}}

  .fa {
    line-height: inherit;
  }

  .emoji {
    font-family: apple color emoji,segoe ui emoji,noto color emoji,android emoji,emojisymbols,emojione mozilla,twemoji mozilla,segoe ui symbol;
  }
</style>



<div class="container">
  <div class="wrapper">
    <article class="post">
      <header class="post-header">
        <h1 class="post-title">Digitale Probe ‚Äì Musicollective</h1>
        <p class="lead">W√§hle ein St√ºck aus, dann kannst du die Lautst√§rke der Stimmen f√ºr ein optimales √úbe-Erlebnis einzeln regulieren. Viel Spa√ü beim Proben!</p>
      </header>
      <div class="post-content">
        <div id="top-bar" class="playlist-top-bar">
  <div class="playlist-toolbar">
  	<div class="btn-group" style="min-width:20em">
  	<select class="form-control select-songs" autocomplete="off">
  		<option value="-1" selected>St√ºck w√§hlen...</option>
  		{{#each song}}
  		<option value="{{@index}}">{{this}}</option>
  		{{/each}}
  	</select>
  	</div>
    <div class="btn-group">
      <span class="btn-pause btn btn-warning"><i class="fa fa-pause"></i></span>
      <span class="btn-play btn btn-success"><i class="fa fa-play"></i></span>
      <span class="btn-stop btn btn-danger"><i class="fa fa-stop"></i></span>
      <span class="btn-rewind btn btn-success"><i class="fa fa-fast-backward"></i></span>
      <span tabindex="0" class="btn-record btn btn-danger" data-toggle="popover" title="Tipps" data-placement="top" data-content="In einigen Browsern funktioniert die Aufnahmefunktion derzeit noch nicht. Um ein brauchbares Ergebnis zu erzielen, verwende Kopfh√∂rer, damit die restliche Musik nicht mit aufgenommen wird. Die Aufnahme beginnt bei der ausgew√§hlten Stelle, der Cursor l√§uft dabei nicht mit."><i class="fa fa-microphone"></i></span>
      <!--<span class="btn-fast-forward btn btn-success"><i class="fa fa-fast-forward"></i></span>-->
    </div>
    &nbsp;<span class="audio-pos">00:00:00.0</span>
    <!--<span class="loading-message" style="display:none">
    	&nbsp;&nbsp;<i class="fa fa-circle-o-notch fa-spin fa-fw"></i></i>Laden... <span class="loading-progress"></span>
    </span>-->&nbsp;
    <div id="loading-progress" class="progress" style="display:inline-block;width:192px;opacity:0;">
  	<div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">25%</div>
	</div>
  </div>
</div>
<div class="row">
  <div id="playlist" class="col-lg-7"></div>
  <div class="card col" id="lyrics-container" style="display:none;height:200px;">
    <div class="card-header">
      Liedtext
    </div>
    <div id="lyrics" class="card-body"></div>
  </div>
</div>
    </article>
    <footer class="small text-secondary"><!--Probleme? Schreib‚Äô eine <a href="mailto:lars@musicollective.de?subject=Digitale%20Probe">Mail an Lars</a> <span class="emoji">üôÇ</span>-->
      <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#feedbackModal">Feedback</button>
    </footer>


<!-- Feedback Modal -->
<div class="modal fade" id="feedbackModal" tabindex="-1" role="dialog" aria-labelledby="feedbackModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="feedbackModalLabel">Feedback</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Hast du Anregungen, Probleme oder Fragen? Hinterlass‚Äô uns hier eine Nachricht und wir kommen so schnell wie m√∂glich auf dich zur√ºck.</p>
        <form>
          <div class="form-group">
            <textarea class="form-control" id="message-text" placeholder="Deine Nachricht"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <span id="feedback-status"></span>
        <div class="spinner-border" id="feedback-spinner" style="display:none;"></div>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Schlie√üen</button>
        <button type="button" class="btn btn-primary" id="send-feedback">Absenden</button>
      </div>
    </div>
  </div>
</div>

<!-- Upload Modal -->
<div class="modal fade" id="uploadModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="uploadModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="uploadModalLabel">Aufnahme hochladen</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Du kannst deine Aufnahme hochladen, damit wir sie uns anh√∂ren k√∂nnen. Vorher solltest du sie nat√ºrlich auch selbst einmal abgespielt haben. Je nach Internetverbindung kann der Upload eine Weile dauern.</p>
        <div class="progress">
          <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" id="upload-progress" aria-valuemax="100">0%</div>
        </div>
      </div>
      <div class="modal-footer">
        <span id="upload-status"></span>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
        <button type="button" class="btn btn-primary" id="send-track">Hochladen</button>
      </div>
    </div>
  </div>
</div>
  </div>
</div>

<script type="text/javascript" src="jquery/jquery.min.js"></script>
<script type="text/javascript" src="bootstrap/js/bootstrap.bundle.min.js"></script>
<script type="text/javascript" src="bowser/es5.js"></script>
<script type="text/javascript" src="md/markdown-it.min.js"></script>
<script type="text/javascript" src="waveform-playlist/js/waveform-playlist.var.js"></script>

<script type="text/javascript">var resources = JSON.parse('{{{resources}}}');</script>

<script type="text/javascript">
  if (console.everything === undefined)
  {
    console.everything = [];

    console.defaultLog = console.log.bind(console);
    console.log = function(){
        console.everything.push("[log]" + Array.from(arguments));
        console.defaultLog.apply(console, arguments);
    }
    console.defaultError = console.error.bind(console);
    console.error = function(){
        console.everything.push("[error]" + Array.from(arguments));
        console.defaultError.apply(console, arguments);
    }
    console.defaultWarn = console.warn.bind(console);
    console.warn = function(){
        console.everything.push("[warn]" + Array.from(arguments));
        console.defaultWarn.apply(console, arguments);
    }
    console.defaultDebug = console.debug.bind(console);
    console.debug = function(){
        console.everything.push("[debug]" + Array.from(arguments));
        console.defaultDebug.apply(console, arguments);
    }
  }

  window.onerror = function(msg, src, lineno, colno, error) {
    $.post('/jserror', {
      data: {message: msg, source: src, lineno:lineno, stack:error.stack, ua:navigator.userAgent}
    });
  }

  $(function () {
    //if(bowser.getParser(window.navigator.userAgent).getPlatform().type == "desktop")
    $('.btn-record').popover({trigger: 'hover focus'});
    $('#send-feedback').click(sendFeedback);
    $('#send-track').click(upload);
    $('body').keydown(handleKeydown);
  })
  var md = window.markdownit();
	var playlist = WaveformPlaylist.init({
	  samplesPerPixel: 5000,
	  waveHeight: 100,
	  container: document.getElementById("playlist"),
	  timescale: true,
	  state: 'cursor',
	  colors: {
	    waveOutlineColor: '#E0EFF1'
	  },
	  controls: {
	    show: true, //whether or not to include the track controls
	    width: 170 //width of controls in pixels
	  },
	  zoomLevels: [500, 1000, 3000, 5000],
  });

  var handleKeydown = function(ev) {
    var ev = ev.originalEvent;

    // disable all shortcuts when feedback modal is open
    if(($("#feedbackModal").data('bs.modal') || {})._isShown)
      return true;

    // space to toggle playback
    if(ev.keyCode == 32) {
      if(ev.repeat == false && !isRecording)
      {
        if(!playlist.isPlaying())
          ee.emit("play");
        else
          ee.emit("pause");
      }
      return false;
    }


  };

  var sendFeedback = function() {
    if($("#send-feedback").hasClass("disabled")) return;
    $("#feedback-spinner").show();
    $("#send-feedback").addClass("disabled");
    $.post('/feedback', {
      msg: $("#message-text").val(), 
      ua: navigator.userAgent, 
      con: JSON.stringify(console.everything)
    }, function(res){
      $("#feedback-spinner").hide();
      if(res == 'success') {
        setTimeout(() => {
          $("#feedbackModal").modal('hide');
          $("#feedback-status").empty();
          $("#message-text").val("");
          $("#send-feedback").removeClass("disabled");
        }, 1200);
        $("#feedback-status").text("Vielen Dank!");
      } else {
        $("#send-feedback").removeClass("disabled");
        $("#feedback-status").text("Fehler.")
      }
    });
  }

  function concatTypedArrays(a, b) { // a, b TypedArray of same type
      var c = new (a.constructor)(a.length + b.length);
      c.set(a, 0);
      c.set(b, a.length);
      return c;
    }

  var upload = function() {
    if($("#send-track").hasClass("disabled")) return;
    $("#send-track").addClass("disabled");
    $("#upload-status").empty();
    var t = uploadTrack.buffer;

    var oReq = new XMLHttpRequest();
    oReq.open("POST", "/upload", true);
    oReq.setRequestHeader("Content-Type", "application/octet-stream");
    oReq.setRequestHeader("X-Samplerate", t.sampleRate);
    oReq.setRequestHeader("X-Song", $(".select-songs option:selected").text());
    oReq.onload = function (oEvent) {
      $("#send-track").removeClass("disabled");
      console.log(oReq.response)
      if(oReq.response == '"ok"') {
        $("#uploadModal").modal("hide");
        $("#upload-progress").width("0%");
        $("#upload-progress").empty();
        //FIXME boy this is hacky...
        $(".playlist-tracks :nth-child("+(playlist.tracks.indexOf(uploadTrack)+1)+") .upload-btn").removeClass("btn-outline-dark").addClass("btn-outline-success");
      } else {
        $("#upload-status").text("Fehler beim Hochladen.");
      }
    };
    oReq.upload.onprogress = function(e) {

      if (e.lengthComputable) {
        $("#upload-progress").width((e.loaded / e.total) * 100 + "%");
        $("#upload-progress").text(Math.round(e.loaded / e.total * 100) + "%"); // Fallback for unsupported browsers.
      }
      if(e.loaded == e.total) $("#upload-progress").text("Verarbeiten...");
    };

    $('#uploadModal').on('hide.bs.modal', function (e) {
      oReq.abort();
      $("#upload-progress").width("0%");
      $("#upload-progress").empty();
      $("#send-track").removeClass("disabled");
    })

    var buf = t.getChannelData(0);
    oReq.send(buf);
  }
</script>
<script type="text/javascript" src="player.js"></script>